extends Spatial

var x = load("res://scenes/Floor.tscn")
var h = load("res://scenes/Half.tscn")
var f = load("res://scenes/Full.tscn")
var t = load("res://scenes/Tunnel.tscn")
var ht = load("res://scenes/TopTunnel.tscn")

var level = {
	gravity = 8,
	fuel = 150,
	oxygen = 180,
	palette = [
		 Color8(  0,  0,  0), Color8(172, 80, 16), Color8(  0,140,  0), Color8(196,100, 68), Color8(152, 68, 32), Color8(140,140,160),
		 Color8(176,108,100), Color8(124,104, 84), Color8( 80, 80, 80), Color8( 68, 68,212), Color8( 68,212, 68), Color8( 84, 92,100),
		 Color8(212, 68, 68), Color8(252,152,224), Color8( 80,160,160), Color8(212,212,212), Color8(140, 64, 12), Color8(  0,116,  0),
		 Color8(160, 80, 56), Color8(124, 56, 24), Color8(116,116,132), Color8(144, 88, 80), Color8(100, 84, 68), Color8( 64, 64, 64),
		 Color8( 56, 56,172), Color8( 56,172, 56), Color8( 68, 76, 80), Color8(172, 56, 56), Color8(208,124,184), Color8( 64,132,132),
		 Color8(172,172,172), Color8(120, 56,  8), Color8(  0,100,  0), Color8(140, 72, 48), Color8(108, 48, 20), Color8(100,100,112),
		 Color8(124, 76, 72), Color8( 88, 72, 60), Color8( 56, 56, 56), Color8( 48, 48,152), Color8( 48,152, 48), Color8( 60, 64, 72),
		 Color8(152, 48, 48), Color8(180,108,160), Color8( 56,112,112), Color8(152,152,152), Color8(100, 48,  8), Color8(  0, 84,  0),
		 Color8(116, 60, 40), Color8( 88, 40, 16), Color8( 84, 84, 96), Color8(104, 64, 60), Color8( 72, 60, 48), Color8( 48, 48, 48),
		 Color8( 40, 40,124), Color8( 40,124, 40), Color8( 48, 52, 60), Color8(124, 40, 40), Color8(148, 88,132), Color8( 48, 96, 96),
		 Color8(124,124,124), Color8(252, 60,100), Color8(208, 48, 80), Color8(180, 40, 72), Color8(148, 36, 60), Color8(148, 36, 60),
		 Color8(208, 48, 80), Color8(148, 36, 60), Color8(252, 60,100), Color8(240, 56, 96), Color8(204, 48, 80), Color8(148, 36, 60),
	],
	road = [
		[["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["xf  ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["xf  ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["    ",  0,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["xf  ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["xf  ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["    ",  0,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ],
		[["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ],
		[["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["xt  ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["xt  ", 11,  0], ["xt  ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["    ",  0,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ],
		[["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 11,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["    ",  0,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["xth ", 11,  0], ["xth ", 11,  0], ["xth ", 11,  0], ["xth ", 11,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["xt  ",  3,  0], ],
		[["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["xt  ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["xt  ", 11,  0], ["xt  ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["    ",  0,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ],
		[["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ],
		[["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["xf  ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["xf  ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["    ",  0,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["xf  ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["xf  ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["    ",  0,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ],
	]
}


var level2 = {
	gravity = 8,
	fuel = 200,
	oxygen = 42,
	palette = [
		 Color8(  0,  0,  0), Color8(120,188,120), Color8(  0,140,  0), Color8(  0,112,140), Color8(140,  0,  0), Color8(140,  0,140),
		 Color8(140, 68,  0), Color8(140,140,140), Color8( 80, 80, 80), Color8( 68, 68,212), Color8( 68,212, 68), Color8( 68,212,212),
		 Color8(212, 68, 68), Color8(180,124,156), Color8(248,172, 44), Color8(212,212,212), Color8( 96,156, 96), Color8(  0,116,  0),
		 Color8(  0, 92,116), Color8(116,  0,  0), Color8(116,  0,116), Color8(116, 56,  0), Color8(116,116,116), Color8( 64, 64, 64),
		 Color8( 56, 56,172), Color8( 56,172, 56), Color8( 56,172,172), Color8(172, 56, 56), Color8(148,100,128), Color8(204,140, 36),
		 Color8(172,172,172), Color8( 84,132, 84), Color8(  0,100,  0), Color8(  0, 80,100), Color8(100,  0,  0), Color8(100,  0,100),
		 Color8(100, 48,  0), Color8(100,100,100), Color8( 56, 56, 56), Color8( 48, 48,152), Color8( 48,152, 48), Color8( 48,152,152),
		 Color8(152, 48, 48), Color8(128, 88,112), Color8(176,120, 28), Color8(152,152,152), Color8( 72,112, 72), Color8(  0, 84,  0),
		 Color8(  0, 64, 84), Color8( 84,  0,  0), Color8( 84,  0, 84), Color8( 84, 40,  0), Color8( 84, 84, 84), Color8( 48, 48, 48),
		 Color8( 40, 40,124), Color8( 40,124, 40), Color8( 40,124,124), Color8(124, 40, 40), Color8(108, 72, 92), Color8(148,100, 24),
		 Color8(124,124,124), Color8(252,252,252), Color8(208,208,208), Color8(180,180,180), Color8(148,148,148), Color8(148,148,148),
		 Color8(168, 36,  8), Color8(120, 24,  4), Color8(204, 44, 12), Color8(192, 40,  8), Color8(164, 36,  8), Color8(120, 24,  4),
	],
	road = [
		[["    ",  0,  0], ["    ",  0,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  1,  0], ["xh  ",  1,  0], ["xh  ",  1,  0], ["xh  ",  1,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  3,  0], ["xh  ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["x   ", 12,  0], ["x   ", 12,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["    ",  0,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["xth ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["    ",  0,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["xh  ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["xtf ",  7,  0], ["xth ",  7,  0], ["xt  ", 13,  0], ["xt  ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["xf  ", 14,  0], ["xf  ", 14,  0], ["xf  ", 14,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["xf  ", 14,  0], ["f   ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["xt  ", 14,  0], ["xt  ", 14,  0], ],
		[["    ",  0,  0], ["    ",  0,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["x   ", 12,  0], ["x   ", 12,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["xh  ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["xt  ", 14,  0], ["xt  ", 14,  0], ],
		[["    ",  0,  0], ["    ",  0,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["    ",  0,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["    ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 13,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["xh  ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["xt  ", 14,  0], ["xt  ", 14,  0], ],
		[["    ",  0,  0], ["    ",  0,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["xh  ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["xt  ",  3,  0], ["xt  ",  3,  0], ["xt  ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["    ",  0,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["    ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["    ",  0,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 13,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["xh  ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["xt  ", 14,  0], ["xt  ", 14,  0], ],
		[["    ",  0,  0], ["    ",  0,  0], ["x   ",  1,  0], ["x   ",  1,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["    ",  0,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["    ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["    ",  0,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["xh  ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["    ",  0,  0], ["x   ", 12,  0], ["x   ", 12,  0], ["x   ", 12,  0], ["    ",  0,  0], ["x   ", 13,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["xh  ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["xt  ", 14,  0], ["xt  ", 14,  0], ],
		[["    ",  0,  0], ["    ",  0,  0], ["xh  ",  1,  0], ["xh  ",  1,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["x   ", 12,  0], ["x   ", 12,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["xh  ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["xt  ", 14,  0], ["xt  ", 14,  0], ],
		[["    ",  0,  0], ["    ",  0,  0], ["xh  ",  1,  0], ["xh  ",  1,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  3,  0], ["xh  ",  3,  0], ["xh  ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["x   ", 12,  0], ["x   ", 12,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["x   ",  4,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["    ",  0,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["xth ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["x   ",  9,  0], ["    ",  0,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["xh  ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["xtf ",  7,  0], ["xth ",  7,  0], ["xt  ", 13,  0], ["xt  ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["x   ", 13,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["xf  ", 14,  0], ["xf  ", 14,  0], ["xf  ", 14,  0], ["xh  ", 14,  0], ["xh  ", 14,  0], ["xh  ", 14,  0], ["xh  ", 14,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["xf  ", 14,  0], ["f   ",  0,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["x   ", 14,  0], ["xt  ", 14,  0], ["xt  ", 14,  0], ],
	]
}

var level3 = {
	gravity = 8,
	fuel = 200,
	oxygen = 42,
	palette = [
		 Color8(  0,  0,  0), Color8(  0,  0,168), Color8(  0,168,  0), Color8(232,232,  0), Color8(168,  0,  0), Color8(168,  0,168),
		 Color8(168, 84,  0), Color8(168,168,168), Color8( 84, 84, 84), Color8( 84, 84,252), Color8( 84,252, 84), Color8( 84,252,252),
		 Color8(252, 84, 84), Color8(252, 84,252), Color8(252,252, 84), Color8(252,252,252), Color8(  0,  0,136), Color8(  0,136,  0),
		 Color8(192,192,  0), Color8(136,  0,  0), Color8(136,  0,136), Color8(136, 68,  0), Color8(136,136,136), Color8( 68, 68, 68),
		 Color8( 68, 68,208), Color8( 68,208, 68), Color8( 68,208,208), Color8(208, 68, 68), Color8(208, 68,208), Color8(208,208, 68),
		 Color8(208,208,208), Color8(  0,  0,120), Color8(  0,120,  0), Color8(164,164,  0), Color8(120,  0,  0), Color8(120,  0,120),
		 Color8(120, 60,  0), Color8(120,120,120), Color8( 60, 60, 60), Color8( 60, 60,180), Color8( 60,180, 60), Color8( 60,180,180),
		 Color8(180, 60, 60), Color8(180, 60,180), Color8(180,180, 60), Color8(180,180,180), Color8(  0,  0,100), Color8(  0,100,  0),
		 Color8(136,136,  0), Color8(100,  0,  0), Color8(100,  0,100), Color8(100, 48,  0), Color8(100,100,100), Color8( 48, 48, 48),
		 Color8( 48, 48,148), Color8( 48,148, 48), Color8( 48,148,148), Color8(148, 48, 48), Color8(148, 48,148), Color8(148,148, 48),
		 Color8(148,148,148), Color8(252,252,252), Color8(208,208,208), Color8(180,180,180), Color8(148,148,148), Color8(148,148,148),
		 Color8(208,  0,  0), Color8(148,  0,  0), Color8(252,  0,  0), Color8(240,  0,  0), Color8(204,  0,  0), Color8(148,  0,  0),
	],
	road = [
		
		[["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["xf  ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  3,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["    ",  0,  0], ["h   ",  0,  0], ["xh  ",  7,  0], ["h   ",  0,  0], ["xh  ",  7,  0], ["h   ",  0,  0], ["xh  ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["    ",  0,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["    ",  0,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ],
		[["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["xf  ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  3,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["    ",  0,  0], ["h   ",  0,  0], ["    ",  0,  0], ["x   ", 12,  0], ["    ",  0,  0], ["x   ", 12,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ],
		[["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["xt  ",  3,  0], ["xt  ",  3,  0], ["xt  ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["x   ", 12,  0], ["    ",  0,  0], ["x   ", 12,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 12,  0], ["    ",  0,  0], ["x   ", 12,  0], ["    ",  0,  0], ["x   ", 12,  0], ["    ",  0,  0], ["    ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["    ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ],
		[["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["xf  ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  3,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["    ",  0,  0], ["h   ",  0,  0], ["    ",  0,  0], ["x   ", 12,  0], ["    ",  0,  0], ["x   ", 12,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ],
		[["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["xf  ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  3,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["h   ",  0,  0], ["    ",  0,  0], ["h   ",  0,  0], ["xh  ",  7,  0], ["h   ",  0,  0], ["xh  ",  7,  0], ["h   ",  0,  0], ["xh  ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["    ",  0,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ],
		xh  ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["xh  ",  7,  0], ["xh  ",  7,  0], ["xh  ",  7,  0], ["xh  ",  7,  0], ["xh  ",  7,  0], ["xh  ",  7,  0], ["xh  ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["xt  ",  7,  0], ["xt  ",  7,  0], ],
	]
}


var materials = {}
func set_color(color, mesh, index):
	var mat
	if color in materials:
		mat = materials[color]
	else:
		mat = SpatialMaterial.new()
		mat.albedo_color = color
		mat.flags_unshaded = true
		materials[color] = mat
	mesh.set_surface_material(index, mat)

var floors = {}
func get_floor(palette, color):
	if color in floors:
		return floors[color].duplicate()
	var tile = x.instance()
	var mesh = tile.get_child(0)
	var j = 0
	# 0-right, 1-front, 2-left, 3-back, 4-top, 6-bottom
	for i in [4, 1, 0, 2]:
		set_color(palette[color+j], mesh, i)
		j += 15
	floors[color] = tile
	return tile

var tops = {}
func get_top(palette, color, type):
	var idx = type+str(color)
	if idx in tops:
		return tops[idx].duplicate()
	var tile
	if type == "h":
		tile = h.instance()
	if type == "f":
		tile = f.instance()
	var mesh = tile.get_child(0)
	var j = 61
	# 0-right, 1-front, 2-left, 3-back, 4-top, 6-bottom
	for i in [4, 1, 0, 2]:
		var setcolor = palette[j]
		if color != 0 and i == 4:
			setcolor = color
		set_color(setcolor, mesh, i)
		j += 1
	tops[idx] = tile
	return tile

var tunnel = null
func get_tunnel(palette):
	if tunnel:
		return tunnel.duplicate()

	var tile = t.instance()
	var mesh = tile.get_child(0)
	var front = palette[66]
	var inside = palette[67]

	# Tunnel order:
	# 0: right-edge (71), 1: right-side (70), 2: top-right (68)
	# 3: top-left (69), 4: left-side (70), 5: left-edge (71)
	# 0-outside, 1-inside, 2-front
	var i = 2
	set_color(palette[68], mesh, i*3+0)
	set_color(inside, mesh, i*3+1)
	set_color(front, mesh, i*3+2)
	i = 3
	set_color(palette[69], mesh, i*3+0)
	set_color(inside, mesh, i*3+1)
	set_color(front, mesh, i*3+2)
	for i in [1, 4]:
		set_color(palette[70], mesh, i*3+0)
		set_color(inside, mesh, i*3+1)
		set_color(front, mesh, i*3+2)
	for i in [0, 5]:
		set_color(palette[71], mesh, i*3+0)
		set_color(inside, mesh, i*3+1)
		set_color(front, mesh, i*3+2)

	tunnel = tile
	return tile

var half_tunnel = null
func get_half_tunnel(palette, color):
	if half_tunnel:
		return half_tunnel.duplicate()
	var tile = ht.instance()
	var mesh = tile.get_child(0)
	var front = palette[66]
	var inside = palette[67]
	# 0: top, 1: front, 2: left, 3: right, 4: back, 5: inside
	var top_color = palette[61]
	if color != 0:
		top_color = palette[color]
	set_color(top_color, mesh, 0)
	set_color(palette[62], mesh, 1)
	set_color(palette[63], mesh, 3)
	set_color(palette[64], mesh, 2)
	set_color(palette[65], mesh, 5)
	half_tunnel = tile
	return tile

func _ready():
	var r = -5
	var level = level3
	for row in level["road"]:
		var c = 0
		for col in row:
			if "x" in col[0]:
				var tile = get_floor(level["palette"], col[1])
				tile.global_translate(Vector3(r, 0, c))
				add_child(tile)
			if "t" in col[0]:
				if "f" in col[0]:
					var tile = get_half_tunnel(level["palette"], col[2])
					tile.global_translate(Vector3(r, 0, c))
					add_child(tile)
					var topfill = get_top(level["palette"], col[2], "h")
					topfill.global_translate(Vector3(r, 1, c))
					add_child(topfill)
				elif "h" in col[0]:
					var tile = get_half_tunnel(level["palette"], col[2])
					tile.global_translate(Vector3(r, 0, c))
					add_child(tile)
				else:
					var tile = get_tunnel(level["palette"])
					tile.global_translate(Vector3(r, 0, c))
					add_child(tile)
			else:
				var tile
				if "h" in col[0]:
					tile = get_top(level["palette"], col[2], "h")
				if "f" in col[0]:
					tile = get_top(level["palette"], col[2], "f")
				if tile:
					tile.global_translate(Vector3(r, 0, c))
					add_child(tile)
			c = c - 6
		r = r + 2
	pass
