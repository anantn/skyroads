extends Spatial

var x = load("res://scenes/Floor.tscn")
var h = load("res://scenes/Half.tscn")
var f = load("res://scenes/Full.tscn")

var level = {
	gravity = 8,
	fuel = 150,
	oxygen = 180,
	palette = [
		Color8(  0,  0,  0), Color8(172, 80, 16), Color8(  0,140,  0), Color8(196,100, 68), Color8(152, 68, 32), Color8(140,140,160), 
		Color8(176,108,100), Color8(124,104, 84), Color8( 80, 80, 80), Color8( 68, 68,212), Color8( 68,212, 68), Color8( 84, 92,100), 
		Color8(212, 68, 68), Color8(252,152,224), Color8( 80,160,160), Color8(212,212,212), Color8(140, 64, 12), Color8(  0,116,  0), 
		Color8(160, 80, 56), Color8(124, 56, 24), Color8(116,116,132), Color8(144, 88, 80), Color8(100, 84, 68), Color8( 64, 64, 64), 
		Color8( 56, 56,172), Color8( 56,172, 56), Color8( 68, 76, 80), Color8(172, 56, 56), Color8(208,124,184), Color8( 64,132,132), 
		Color8(172,172,172), Color8(120, 56,  8), Color8(  0,100,  0), Color8(140, 72, 48), Color8(108, 48, 20), Color8(100,100,112), 
		Color8(124, 76, 72), Color8( 88, 72, 60), Color8( 56, 56, 56), Color8( 48, 48,152), Color8( 48,152, 48), Color8( 60, 64, 72), 
		Color8(152, 48, 48), Color8(180,108,160), Color8( 56,112,112), Color8(152,152,152), Color8(100, 48,  8), Color8(  0, 84,  0), 
		Color8(116, 60, 40), Color8( 88, 40, 16), Color8( 84, 84, 96), Color8(104, 64, 60), Color8( 72, 60, 48), Color8( 48, 48, 48), 
		Color8( 40, 40,124), Color8( 40,124, 40), Color8( 48, 52, 60), Color8(124, 40, 40), Color8(148, 88,132), Color8( 48, 96, 96), 
		Color8(124,124,124), Color8(252, 60,100), Color8(208, 48, 80), Color8(180, 40, 72), Color8(148, 36, 60), Color8(148, 36, 60), 
		Color8(208, 48, 80), Color8(148, 36, 60), Color8(252, 60,100), Color8(240, 56, 96), Color8(204, 48, 80), Color8(148, 36, 60), 
	],
	road = [
		[["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["xf  ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["xf  ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["    ",  0,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["xf  ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["xf  ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["    ",  0,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x
		[["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ],
		[["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["xt  ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["xt  ", 11,  0], ["xt  ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["    ",  0,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ],
		[["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 11,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["    ",  0,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["xth ", 11,  0], ["xth ", 11,  0], ["xth ", 11,  0], ["xth ", 11,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["xt  ",  3,  0], ],
		[["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["xt  ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["xt  ", 11,  0], ["xt  ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["    ",  0,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ],
		[["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["x   ", 11,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["x   ",  3,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ["    ",  0,  0], ],
		[["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["xf  ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["xf  ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["    ",  0,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["xf  ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["xf  ",  5,  0], ["x   ",  5,  0], ["x   ",  5,  0], ["    ",  0,  0], ["x   ",  7,  0], ["x   ",  7,  0], ["x
	]
}

func _ready():
	var r = -5
	for row in level["road"]:
		var c = 0
		for col in row:
			if "x" in col[0]:
				var tile = x.instance()
				var color = level["palette"][col[1]]
				if "h" in col[0]:
					tile = h.instance()
					if col[2] == 0:
						color = level["palette"][62]
				if "f" in col[0]:
					tile = f.instance()
					if col[2] == 0:
						color = level["palette"][62]
				var mesh = tile.get_child(0)
				var mat = mesh.get_surface_material(0).duplicate()
				mat.albedo_color = color
				mesh.set_surface_material(0, mat)
				tile.global_translate(Vector3(r, 0, c))
				add_child(tile)
			c = c - 6
		r = r + 2
	pass
